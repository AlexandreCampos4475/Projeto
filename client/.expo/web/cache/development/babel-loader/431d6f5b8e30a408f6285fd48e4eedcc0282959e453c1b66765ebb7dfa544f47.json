{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport api from \"../api/axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SignUpPage = function SignUpPage(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    nome = _useState4[0],\n    setnome = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    telefone = _useState6[0],\n    settelefone = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    cpf = _useState8[0],\n    setcpf = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    senha = _useState10[0],\n    setSenha = _useState10[1];\n  var handleSignUp = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!nome || !cpf || !validateEmail(email) || !senha || !telefone) {\n        alert('Por favor, preencha todos os campos.');\n        return;\n      }\n      var res = yield api.post('/register', {\n        email: email,\n        nome: nome,\n        telefone: telefone,\n        cpf: cpf,\n        senha: senha\n      });\n      if (res.data.status === false) {\n        alert('Não foi possível realizar o cadastro!');\n      } else {\n        navigation.navigate('Primeira');\n      }\n    });\n    return function handleSignUp() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleEmailChange = function handleEmailChange(emailValue) {\n    setEmail(emailValue);\n  };\n  var validateEmail = function validateEmail(emailValue) {\n    var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(emailValue);\n  };\n  var handleBlur = function handleBlur() {\n    if (!validateEmail(email)) {\n      alert('Por favor, insira um endereço de e-mail válido');\n    }\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {}), _jsx(Text, {}), _jsx(Text, {\n      style: styles.title,\n      children: \"Vamos registrar\"\n    }), _jsx(Text, {\n      style: styles.title1,\n      children: \"sua conta\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Nome\",\n      value: nome,\n      onChangeText: setnome\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"CPF\",\n      keyboardType: \"numeric\",\n      value: cpf,\n      onChangeText: setcpf\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Digite seu e-mail\",\n      keyboardType: \"email-address\",\n      value: email,\n      onChangeText: handleEmailChange,\n      onBlur: handleBlur,\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Telefone\",\n      value: telefone,\n      keyboardType: \"phone-pad\",\n      onChangeText: settelefone\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Senha\",\n      secureTextEntry: true,\n      value: senha,\n      onChangeText: setSenha\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleSignUp,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Criar conta\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('LoginPage');\n      },\n      children: _jsx(Text, {\n        style: {\n          color: 'red',\n          textDecorationLine: 'underline'\n        },\n        children: \"J\\xE1 tem uma conta?\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16\n  },\n  title: {\n    alignSelf: 'flex-start',\n    justifyContent: 'space-between',\n    fontSize: 30,\n    fontWeight: 'bold',\n    marginBottom: 24\n  },\n  title1: {\n    alignSelf: 'flex-start',\n    color: 'red',\n    fontSize: 30,\n    fontWeight: 'bold',\n    marginBottom: 24\n  },\n  input: {\n    width: '100%',\n    height: 58,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    marginBottom: 16\n  },\n  button: {\n    width: '100%',\n    height: 68,\n    backgroundColor: 'red',\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#FFF'\n  }\n});\nexport default SignUpPage;","map":{"version":3,"names":["React","useState","createStackNavigator","NavigationContainer","View","Text","TextInput","TouchableOpacity","StyleSheet","api","jsx","_jsx","jsxs","_jsxs","SignUpPage","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","nome","setnome","_useState5","_useState6","telefone","settelefone","_useState7","_useState8","cpf","setcpf","_useState9","_useState10","senha","setSenha","handleSignUp","_ref2","_asyncToGenerator","validateEmail","alert","res","post","data","status","navigate","apply","arguments","handleEmailChange","emailValue","emailRegex","test","handleBlur","style","styles","container","children","title","title1","input","placeholder","value","onChangeText","keyboardType","onBlur","autoCapitalize","autoCompleteType","textContentType","secureTextEntry","button","onPress","buttonText","color","textDecorationLine","create","flex","justifyContent","alignItems","padding","alignSelf","fontSize","fontWeight","marginBottom","width","height","borderWidth","borderColor","borderRadius","paddingHorizontal","backgroundColor"],"sources":["C:/Users/PC/Desktop/Projeto/client/telas/criar_conta.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { createStackNavigator } from '@react-navigation/native-stack';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { View,Text,TextInput,TouchableOpacity, StyleSheet} from 'react-native';\r\n\r\nimport api from '../api/axios';\r\n\r\nconst SignUpPage = ({navigation}) => {\r\n  const [email, setEmail] = useState('');\r\n  const [nome, setnome] = useState('');\r\n  const [telefone, settelefone] = useState(''); // criando as variaveis para receber os valores\r\n  const [cpf, setcpf] =useState('');\r\n  const [senha, setSenha] = useState('');\r\n \r\n  const handleSignUp = async () => {\r\n\r\n    if (!nome || !cpf || !validateEmail(email) || !senha || !telefone) {\r\n      alert('Por favor, preencha todos os campos.');\r\n      return;\r\n    }\r\n  \r\n    const res = await api.post('/register', {\r\n      email,\r\n      nome,\r\n      telefone,\r\n      cpf,\r\n      senha\r\n    });\r\n\r\n    if(res.data.status === false) {\r\n      alert('Não foi possível realizar o cadastro!');\r\n    } else {\r\n      navigation.navigate('Primeira');\r\n    }\r\n\r\n    // console.log('Nome:', nome);\r\n    // console.log('CPF: ', cpf);                 // criando os texto e mostrando aonde vai ser amarzenado\r\n    // console.log('Email:', email);\r\n    // console.log('Senha:', Senha);\r\n    // console.log('Telefone:',telefone);\r\n  }\r\n\r\n  const handleEmailChange = (emailValue) => {\r\n    setEmail(emailValue);\r\n  };\r\n\r\n  const validateEmail = (emailValue) => {\r\n    // Verifica se o valor inserido é um endereço de e-mail válido\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(emailValue);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (!validateEmail(email)) {  \r\n      alert('Por favor, insira um endereço de e-mail válido');\r\n    }\r\n  };\r\n\r\n  return (\r\n\r\n    \r\n    <View style={styles.container}>\r\n     <Text ></Text>\r\n     <Text ></Text>\r\n     \r\n      <Text style={styles.title}>Vamos registrar</Text>\r\n      <Text style={styles.title1}>sua conta</Text>\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Nome\"              //placeholder serve para escolher nome que vai ser mostrado dentro do imput\r\n        value={nome}\r\n                           // criando os texto imnput de acordo com as variaveis criadas acima\r\n        onChangeText={setnome}         // para os usuarios digitarem\r\n      />                               \r\n       <TextInput                       // onchange permite a chamada da funcao toda vez que o texto é alterado\r\n        style={styles.input}\r\n        placeholder=\"CPF\"\r\n        keyboardType=\"numeric\"\r\n        value={cpf}\r\n        onChangeText={setcpf}\r\n      />\r\n      <TextInput \r\n        style={styles.input}\r\n        placeholder=\"Digite seu e-mail\"\r\n        keyboardType=\"email-address\"\r\n        value={email}\r\n        onChangeText={handleEmailChange}\r\n        onBlur={handleBlur}\r\n        autoCapitalize=\"none\"\r\n        autoCompleteType=\"email\"\r\n        textContentType=\"emailAddress\"\r\n      />\r\n\r\n<TextInput\r\n        style={styles.input}\r\n        placeholder=\"Telefone\"\r\n        value={telefone}\r\n        keyboardType=\"phone-pad\"\r\n        onChangeText={settelefone}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Senha\"\r\n        secureTextEntry\r\n        value={senha}\r\n        onChangeText={setSenha}\r\n      />\r\n      \r\n      <TouchableOpacity\r\n        style={styles.button}\r\n        onPress={handleSignUp}\r\n      >\r\n        <Text style={styles.buttonText} >Criar conta</Text>\r\n        \r\n      </TouchableOpacity>\r\n      <TouchableOpacity onPress={() => navigation.navigate('LoginPage')}>\r\n      <Text style={{ color: 'red', textDecorationLine: 'underline' }}>Já tem uma conta?</Text>\r\n  </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  title: {\r\n    alignSelf: 'flex-start',\r\n    justifyContent:'space-between',\r\n    fontSize: 30,\r\n    fontWeight: 'bold',\r\n    marginBottom: 24,\r\n  },\r\n  title1: {\r\n    alignSelf: 'flex-start',\r\n    color: 'red',\r\n    fontSize: 30,\r\n    fontWeight: 'bold',\r\n    marginBottom: 24,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 58,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 8,\r\n    paddingHorizontal: 16,\r\n    marginBottom: 16,\r\n  },\r\n  button: {\r\n    width: '100%',\r\n    height: 68,\r\n    backgroundColor: 'red',\r\n    borderRadius: 8,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#FFF',\r\n  },\r\n});\r\n\r\nexport default SignUpPage;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,oBAAoB,QAAQ,gCAAgC;AACrE,SAASC,mBAAmB,QAAQ,0BAA0B;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAG/D,OAAOC,GAAG;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE/B,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAqB;EAAA,IAAhBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAC7B,IAAAC,SAAA,GAA0BhB,QAAQ,CAAC,EAAE,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAwBrB,QAAQ,CAAC,EAAE,CAAC;IAAAsB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA7BE,IAAI,GAAAD,UAAA;IAAEE,OAAO,GAAAF,UAAA;EACpB,IAAAG,UAAA,GAAgCzB,QAAQ,CAAC,EAAE,CAAC;IAAA0B,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAC5B,IAAAG,UAAA,GAAqB7B,QAAQ,CAAC,EAAE,CAAC;IAAA8B,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAA1BE,GAAG,GAAAD,UAAA;IAAEE,MAAM,GAAAF,UAAA;EAClB,IAAAG,UAAA,GAA0BjC,QAAQ,CAAC,EAAE,CAAC;IAAAkC,WAAA,GAAAhB,cAAA,CAAAe,UAAA;IAA/BE,KAAK,GAAAD,WAAA;IAAEE,QAAQ,GAAAF,WAAA;EAEtB,IAAMG,YAAY;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAE/B,IAAI,CAAChB,IAAI,IAAI,CAACQ,GAAG,IAAI,CAACS,aAAa,CAACrB,KAAK,CAAC,IAAI,CAACgB,KAAK,IAAI,CAACR,QAAQ,EAAE;QACjEc,KAAK,CAAC,sCAAsC,CAAC;QAC7C;MACF;MAEA,IAAMC,GAAG,SAASlC,GAAG,CAACmC,IAAI,CAAC,WAAW,EAAE;QACtCxB,KAAK,EAALA,KAAK;QACLI,IAAI,EAAJA,IAAI;QACJI,QAAQ,EAARA,QAAQ;QACRI,GAAG,EAAHA,GAAG;QACHI,KAAK,EAALA;MACF,CAAC,CAAC;MAEF,IAAGO,GAAG,CAACE,IAAI,CAACC,MAAM,KAAK,KAAK,EAAE;QAC5BJ,KAAK,CAAC,uCAAuC,CAAC;MAChD,CAAC,MAAM;QACL1B,UAAU,CAAC+B,QAAQ,CAAC,UAAU,CAAC;MACjC;IAOF,CAAC;IAAA,gBA1BKT,YAAYA,CAAA;MAAA,OAAAC,KAAA,CAAAS,KAAA,OAAAC,SAAA;IAAA;EAAA,GA0BjB;EAED,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,UAAU,EAAK;IACxC9B,QAAQ,CAAC8B,UAAU,CAAC;EACtB,CAAC;EAED,IAAMV,aAAa,GAAG,SAAhBA,aAAaA,CAAIU,UAAU,EAAK;IAEpC,IAAMC,UAAU,GAAG,4BAA4B;IAC/C,OAAOA,UAAU,CAACC,IAAI,CAACF,UAAU,CAAC;EACpC,CAAC;EAED,IAAMG,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvB,IAAI,CAACb,aAAa,CAACrB,KAAK,CAAC,EAAE;MACzBsB,KAAK,CAAC,gDAAgD,CAAC;IACzD;EACF,CAAC;EAED,OAGE7B,KAAA,CAACT,IAAI;IAACmD,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC7B/C,IAAA,CAACN,IAAI,KAAS,EACdM,IAAA,CAACN,IAAI,KAAS,EAEbM,IAAA,CAACN,IAAI;MAACkD,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAe,EAAO,EACjD/C,IAAA,CAACN,IAAI;MAACkD,KAAK,EAAEC,MAAM,CAACI,MAAO;MAAAF,QAAA,EAAC;IAAS,EAAO,EAE5C/C,IAAA,CAACL,SAAS;MACRiD,KAAK,EAAEC,MAAM,CAACK,KAAM;MACpBC,WAAW,EAAC,MAAM;MAClBC,KAAK,EAAEvC,IAAK;MAEZwC,YAAY,EAAEvC;IAAQ,EACtB,EACDd,IAAA,CAACL,SAAS;MACTiD,KAAK,EAAEC,MAAM,CAACK,KAAM;MACpBC,WAAW,EAAC,KAAK;MACjBG,YAAY,EAAC,SAAS;MACtBF,KAAK,EAAE/B,GAAI;MACXgC,YAAY,EAAE/B;IAAO,EACrB,EACFtB,IAAA,CAACL,SAAS;MACRiD,KAAK,EAAEC,MAAM,CAACK,KAAM;MACpBC,WAAW,EAAC,mBAAmB;MAC/BG,YAAY,EAAC,eAAe;MAC5BF,KAAK,EAAE3C,KAAM;MACb4C,YAAY,EAAEd,iBAAkB;MAChCgB,MAAM,EAAEZ,UAAW;MACnBa,cAAc,EAAC,MAAM;MACrBC,gBAAgB,EAAC,OAAO;MACxBC,eAAe,EAAC;IAAc,EAC9B,EAER1D,IAAA,CAACL,SAAS;MACFiD,KAAK,EAAEC,MAAM,CAACK,KAAM;MACpBC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEnC,QAAS;MAChBqC,YAAY,EAAC,WAAW;MACxBD,YAAY,EAAEnC;IAAY,EAC1B,EACFlB,IAAA,CAACL,SAAS;MACRiD,KAAK,EAAEC,MAAM,CAACK,KAAM;MACpBC,WAAW,EAAC,OAAO;MACnBQ,eAAe;MACfP,KAAK,EAAE3B,KAAM;MACb4B,YAAY,EAAE3B;IAAS,EACvB,EAEF1B,IAAA,CAACJ,gBAAgB;MACfgD,KAAK,EAAEC,MAAM,CAACe,MAAO;MACrBC,OAAO,EAAElC,YAAa;MAAAoB,QAAA,EAEtB/C,IAAA,CAACN,IAAI;QAACkD,KAAK,EAAEC,MAAM,CAACiB,UAAW;QAAAf,QAAA,EAAE;MAAW;IAAO,EAElC,EACnB/C,IAAA,CAACJ,gBAAgB;MAACiE,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMxD,UAAU,CAAC+B,QAAQ,CAAC,WAAW,CAAC;MAAA,CAAC;MAAAW,QAAA,EAClE/C,IAAA,CAACN,IAAI;QAACkD,KAAK,EAAE;UAAEmB,KAAK,EAAE,KAAK;UAAEC,kBAAkB,EAAE;QAAY,CAAE;QAAAjB,QAAA,EAAC;MAAiB;IAAO,EACzE;EAAA,EACV;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGhD,UAAU,CAACoE,MAAM,CAAC;EAC/BnB,SAAS,EAAE;IACToB,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE;EACX,CAAC;EACDrB,KAAK,EAAE;IACLsB,SAAS,EAAE,YAAY;IACvBH,cAAc,EAAC,eAAe;IAC9BI,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDxB,MAAM,EAAE;IACNqB,SAAS,EAAE,YAAY;IACvBP,KAAK,EAAE,KAAK;IACZQ,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB,CAAC;EACDvB,KAAK,EAAE;IACLwB,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,EAAE;IACVC,WAAW,EAAE,CAAC;IACdC,WAAW,EAAE,MAAM;IACnBC,YAAY,EAAE,CAAC;IACfC,iBAAiB,EAAE,EAAE;IACrBN,YAAY,EAAE;EAChB,CAAC;EACDb,MAAM,EAAE;IACNc,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,EAAE;IACVK,eAAe,EAAE,KAAK;IACtBF,YAAY,EAAE,CAAC;IACfX,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE;EACd,CAAC;EACDN,UAAU,EAAE;IACVS,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBT,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAEF,eAAe5D,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}