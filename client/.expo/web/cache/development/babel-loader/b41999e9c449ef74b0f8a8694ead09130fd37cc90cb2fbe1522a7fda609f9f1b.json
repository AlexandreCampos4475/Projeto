{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport { createStackNavigator } from '@react-navigation/native-stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginPage = function LoginPage(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    senha = _useState4[0],\n    setSenha = _useState4[1];\n  var handleLogin = function handleLogin() {\n    if (!email || !senha) {\n      alert('Por favor, preencha todos os campos.');\n      return;\n    }\n    console.log('Email:', email);\n    console.log('Senha:', senha);\n    navigation.navigate('Primeira');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Entre na sua conta\"\n    }), _jsx(Text, {\n      style: styles.title2,\n      children: \"Bem vindo,\"\n    }), _jsx(Text, {\n      style: styles.title3,\n      children: \"sentimos sua falta\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Email\",\n      keyboardType: \"email-address\",\n      value: email,\n      onChangeText: setEmail\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Senha\",\n      secureTextEntry: true,\n      value: senha,\n      onChangeText: setSenha\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Entrar\"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('SignUpPage');\n      },\n      children: _jsx(Text, {\n        style: {\n          color: 'red',\n          textDecorationLine: 'underline'\n        },\n        children: \"Cria nova conta\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 16\n  },\n  title: {\n    alignSelf: 'flex-start',\n    color: 'red',\n    fontSize: 30,\n    fontWeight: 'bold',\n    marginBottom: 24\n  },\n  title2: {\n    alignSelf: 'flex-start',\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 24\n  },\n  title3: {\n    alignSelf: 'flex-start',\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 24\n  },\n  input: {\n    width: '100%',\n    height: 58,\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 8,\n    paddingHorizontal: 16,\n    marginBottom: 16\n  },\n  button: {\n    width: '100%',\n    height: 68,\n    backgroundColor: 'red',\n    borderRadius: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  buttonText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#FFF'\n  }\n});\nexport default LoginPage;","map":{"version":3,"names":["React","useState","createStackNavigator","NavigationContainer","View","Text","TextInput","TouchableOpacity","StyleSheet","useNavigation","jsx","_jsx","jsxs","_jsxs","LoginPage","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","senha","setSenha","handleLogin","alert","console","log","navigate","style","styles","container","children","title","title2","title3","input","placeholder","keyboardType","value","onChangeText","secureTextEntry","button","onPress","buttonText","color","textDecorationLine","create","flex","justifyContent","alignItems","padding","alignSelf","fontSize","fontWeight","marginBottom","width","height","borderWidth","borderColor","borderRadius","paddingHorizontal","backgroundColor"],"sources":["C:/Users/PC/Desktop/Projeto/telas/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createStackNavigator } from '@react-navigation/native-stack';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\nconst LoginPage = ({navigation}) => {\r\n  \r\n  const [email, setEmail] = useState('');\r\n  const [senha, setSenha] = useState('');   // mesma coisa da pagina criar conta\r\n\r\n  const handleLogin = () => {\r\n    if (!email || !senha) {\r\n      alert('Por favor, preencha todos os campos.');\r\n      return;\r\n    }\r\n    console.log('Email:', email);\r\n    console.log('Senha:', senha);\r\n    navigation.navigate('Primeira');\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Entre na sua conta</Text>\r\n      <Text style={styles.title2}>Bem vindo,</Text>\r\n      <Text style={styles.title3}>sentimos sua falta</Text>\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Email\"\r\n        keyboardType='email-address'\r\n        value={email}\r\n        onChangeText={setEmail}\r\n      />\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Senha\"\r\n        secureTextEntry\r\n        value={senha}\r\n        onChangeText={setSenha}\r\n      />\r\n     <TouchableOpacity\r\n      style={styles.button}\r\n     onPress={handleLogin}\r\n     >\r\n  <Text style={styles.buttonText}>Entrar</Text>\r\n</TouchableOpacity>\r\n<TouchableOpacity onPress={() => navigation.navigate('SignUpPage')}>\r\n      <Text style={{ color: 'red', textDecorationLine: 'underline' }}>Cria nova conta</Text>\r\n  </TouchableOpacity>\r\n      \r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,                    \r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: 16,\r\n  },\r\n  title: {\r\n    alignSelf: 'flex-start',\r\n    color:'red',\r\n    fontSize: 30,\r\n    fontWeight: 'bold',\r\n    marginBottom: 24,\r\n  },\r\n  title2: {\r\n    alignSelf: 'flex-start',\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 24,\r\n  },\r\n  title3: {\r\n    alignSelf: 'flex-start',\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    marginBottom: 24,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 58,\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 8,\r\n    paddingHorizontal: 16,\r\n    marginBottom: 16,\r\n  },\r\n  button: {\r\n    width: '100%',\r\n    height: 68,\r\n    backgroundColor: 'red',\r\n    borderRadius: 8,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  buttonText: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: '#FFF',\r\n  },\r\n});\r\n\r\nexport default LoginPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}